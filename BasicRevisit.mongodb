// insertOne Example
use('sample_training');
db.employees.insertOne({
    "empId": 1,
    "empName": "John",
    "salary": 300000,
    "department": "DX" 
});

// insertMany Example
use('sample_training');
db.employees.insertMany([
    {"empId": 2, "empName":"Jack", "salary": 340000, "department": "ETA"},
    {"empId": 3, "empName": "Jill", "salary": 350000, 
    "department": "IVS"}
]);

use('sample_training');
db.employees.find({});

// Exercises
/**
1. Write a query to insert a single product as mentioned below into the Products collection */
use('sample_training');
db.products.insert({
    "productId": 1001,
    "productName": "iPhone 11 Pro",
    "productCategory": "Smartphones",
    "colors": ["silver", "black", "gold"],
    "productAvailability": 24
});

use('sample_training');
db.products.insertMany([
    {"productId":1002 , "productName": "Sony Bravia R202F", "productCategory": "Televisions", "size": ["32inch", "40inch", "55inch"], "productAvailability": 16},
    {"productId":1003 , "productName": " Self Design Men Round Neck Maroon T-Shirt", "productCategory": "Clothing", "fabric": "Cotton", "sleeve": "Full Sleeve", "productAvailability": 32},
    {"productId": 1004, "productName": "FLOWER Digital Reprint Painting", "productCategory": "Home Decor", "dimensions":"24 inch x 17 inch" , "frameColor":"black" , "productAvailability": 8}
]);

use('sample_training');
db.products.find({});

use('sample_training');
// Find all the employees in the employeeInfy collection
db.employeesInfy.find({});

use('sample_training');
// Find all the employess as per condition and projection
db.employeesInfy.find({"department": "ETA"});

// Fetch only employee names and department who are from "ETA" department
use('sample_training');
db.employeesInfy.find({"department": "ETA"}, {"empName": 1, "department": 1, "_id": 0});

// FindOne query
use('sample_training');
db.employeesInfy.findOne();

// Fetch the name and salary of employee with empId: 6
use('sample_training');
db.employeesInfy.find({"empId": 6}, {"empName": 1, "salary": 1, "_id": 0});

// Fetch the details of the employee who is allocated with mahcine having machine_id 1003
use('sample_training');
db.employeesInfy.find({"machineId": 1003});
// Find query returns array of objects and findOne only returns the object

// Fetch the employee details where machineId is 10
use('sample_training');
db.employeesInfy.find({"machineId": 10}); // []

use('sample_training');
db.employeesInfy.findOne({"machineId": 10}); // null

// Fetch the employees having salary > 30000
// Fetch the employees who are not from the ETA department
use('sample_training');
db.employeesInfy.find({"salary": {$gt: 30000}});

use('sample_training');
db.employeesInfy.find({"salary": {$gt: 40000}}, {"empId": 1, "salary":1, "_id":0});

use('sample_training');
db.employeesInfy.find({"department": {$ne: 'ETA'}}, {"empId": 1, "department": 1, "_id": 0});

// Fetch the documents where the employees are from department other than ETA and IVS
use('sample_training');
db.employeesInfy.find({"department": {$nin: ["ETA", "IVS"]}}, {"empId": 1, "department": 1, "_id": 0});
// Fetch the documents where the employees are from department  ETA and IVS
use('sample_training');
db.employeesInfy.find({"department": {$in: ["ETA", "IVS"]}}, {"empId": 1, "department": 1, "_id": 0});
// Removes the key where the department field is not present
use('sample_training');
db.employeesInfy.find({"department": {$exists: true, $nin: ["ETA", "IVS"]}}, {"empId": 1, "department": 1, "_id": 0});

// $size operator - To find the number of elements in the mongodb documents
// Find the documents where the employees have worked in 2 different roles
use('sample_training');
db.employeesInfy.find({"experience": {$size: 2}}, {"empName":1, "experience": 1, "_id": 0});

// $regex operator
// Fetch all the employee doucments where empName starts with "J"
use('sample_training');
db.employeesInfy.find({"empName": {$regex: /^J+/}}, {"empName":1, "_id": 0});

// To perform case insensitive search using regex
use('sample_training');
db.employeesInfy.find({"empName": {$regex: /^J+/, $options: "i"}}, {"empName":1, "_id": 0});

// Fetch the employees where empName starts with A or E
use('sample_training');
db.employeesInfy.find({"empName": {$in: [/^A+/i,/^E+/i]}},  {"empName":1, "_id": 0});

// Fetch the employee details from ETA or IVS department and salary > 30000
use('sample_training');
db.employeesInfy.find({$and: [{"department": {$in: ["ETA", "IVS"]}}, {"salary": {$gt: 30000}}]}, {"_id": 0, "department": 1, "salary": 1});

// Fetch the employee details from ETA or IVS department or salary > 30000
use('sample_training');
db.employeesInfy.find({$or: [{"department": {$in: ["ETA", "IVS"]}}, {"salary": {$gt: 30000}}]}, {"_id": 0, "department": 1, "salary": 1});


// Fetch the employee documents where the machineId is not greater than 1002
